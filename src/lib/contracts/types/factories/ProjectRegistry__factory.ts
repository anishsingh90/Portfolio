
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { ProjectRegistry, ProjectRegistryInterface } from "../ProjectRegistry";

const _abi = [
  {
    inputs: [],
    name: "getProjects",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "tags",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "githubLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "liveDemoLink",
            type: "string",
          },
        ],
        internalType: "struct ProjectRegistry.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ProjectRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ProjectRegistryInterface {
    return new Interface(_abi) as ProjectRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProjectRegistry {
    return new Contract(address, _abi, runner) as unknown as ProjectRegistry;
  }
}

    